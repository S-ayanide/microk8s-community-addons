#!/usr/bin/env bash

set -e

source $SNAP/actions/common/utils.sh

# Variables
VERSION="master"
SCOPE="cluster"

KUBECTL="$SNAP/microk8s-kubectl.wrapper"
"$SNAP/microk8s-enable.wrapper" dns

# Waiting for the apiserver to start
sleep 5
${SNAP}/microk8s-status.wrapper --wait-ready --timeout 30 >/dev/null

# Check for arguments
while [[ $# -gt 0 ]]; do
  case $1 in
    --scope)
      read -ra SCOPE <<< "$2"
      shift
      shift
      ;;
    -v|--version)
      read -ra VERSION <<< "$2"
      shift
      shift
      ;;
    -*|--*)
      echo "Unknown option $1"
      exit 1
      ;;
  esac
done

echo "Enabling Litmuschaos"

if [ "${VERSION}" == "master" ] && [ "${SCOPE}" == "cluster" ]
then
  $KUBECTL apply -f "https://raw.githubusercontent.com/litmuschaos/litmus/master/litmus-portal/manifests/cluster-k8s-manifest.yml"
elif [ "${VERSION}" == "master" ] && [ "${SCOPE}" != "cluster" ]
then
  $KUBECTL create ns litmus
  #Install CRDs, if SELF_AGENT env is set to TRUE
  $KUBECTL apply -f https://raw.githubusercontent.com/litmuschaos/litmus/master/litmus-portal/manifests/litmus-portal-crds.yml
  #Install ChaosCenter
  $KUBECTL apply -f https://raw.githubusercontent.com/litmuschaos/litmus/master/litmus-portal/manifests/namespace-k8s-manifest.yml -n litmus
elif [ "${VERSION}" != "master" ] && [ "${SCOPE}" == "cluster" ]
then
  $KUBECTL apply -f "https://raw.githubusercontent.com/litmuschaos/litmus/master/mkdocs/docs/${VERSION}/litmus-${VERSION}.yaml"
elif [ "${VERSION}" != "master" ] && [ "${SCOPE}" != "cluster" ]
then
  $KUBECTL create ns litmus
  #Install CRDs, if SELF_AGENT env is set to TRUE
  $KUBECTL apply -f "https://raw.githubusercontent.com/litmuschaos/litmus/${VERSION}/litmus-portal/manifests/litmus-portal-crds.yml"
  #Install ChaosCenter
  $KUBECTL apply -f "https://raw.githubusercontent.com/litmuschaos/litmus/${VERSION}/litmus-portal/manifests/namespace-${VERSION}.yml -n litmus"
fi

echo "Litmus is enabled, please allow sometime before litmus starts up"